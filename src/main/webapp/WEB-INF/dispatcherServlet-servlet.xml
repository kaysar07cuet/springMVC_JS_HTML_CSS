<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
		
	<context:component-scan base-package="com.ghost.spring.employee"  use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<!-- 视图解析器 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	
	<!-- 访问静态资源时使用 -->
	<mvc:default-servlet-handler/>
	<!-- 配置了default-servlet-handler时一定要用，进行标记的资源映射 
		同时，conversion-service属性将自定义的类型数据转换器注册进来，
		使请求从前端到后端controller方法的过程中能够被转换。
	-->
	<!-- 如果配置了conversionservice，
	则默认的FormattingConversionService实例就不起作用了，因此在其内部注册的
	@DateTimeFormat和@NumberFormat就都不起作用了。在定义ConversionServiceFactoryBean的时候一定要选用
	FormattingConversionServiceFactoryBean而不是ConversionServiceFactoryBean。
	-->	
  	<mvc:annotation-driven conversion-service="conversionService"></mvc:annotation-driven>
  	<!--  -->
  	
  	<!-- 自定义拦截器 -->
  	<mvc:interceptors>
  		<bean id="" class="com.ghost.spring.employee.test.FirstHandlerInterceptor"></bean>
  		<!-- mvc:interceptor 可以配置拦截器拦截路径 -->
  		<!-- <mvc:interceptor>
  			<mvc:exclude-mapping path=""/>
  		</mvc:interceptor>  -->
  	</mvc:interceptors>
  
	<bean id="employeeConverter" class="com.ghost.spring.employee.converties.EmployeeConverter"></bean>
	<!-- 配置ConversionService ,将form中的字符串转换为Employee 对象，发送给controller方法-->
	
	
	<!-- 不要使用 class="org.springframework.context.support.ConversionServiceFactoryBean"
	这样的话，annotation-driven就只识别该FactoryBean所注册的转换器而不识别自带的如@DateTimeFormat和@NumberFormat
	等转换器。因此应该使用
	class="org.springframework.format.support.FormattingConversionServiceFactoryBean"
	-->
	<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="converters">
			<set>
				<ref bean="employeeConverter"/>
			</set>
		</property>
	</bean>
	
		
  	<!-- 上传文件配置 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8"></property> 
		<property name="maxUploadSize" value="1024000"></property>
	</bean>
	
	<!-- 配置直接转发的页面，该配置生效后，view-name对应的页面名称将会被显示，前提是path是/timer
		而view-name所规定 的名称解析仍然是由视图解析器配置好的。
	 -->
	<mvc:view-controller path="/timer" view-name="timer"/>
	<mvc:view-controller path="/html" view-name="html"/>
	<mvc:view-controller path="/roll" view-name="roll"/>
</beans>